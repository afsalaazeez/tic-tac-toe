// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic-cli using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
import React from 'react';
import { render, fireEvent, screen } from '@testing-library/react';
import Square from '../../../../src/components/square/Square';

describe('Square Component Tests', () => {
    test('renders the button with the correct initial value', () => {
        render(<Square value="X" onClick={() => {}} />);
        const buttonElement = screen.getByRole('button');
        expect(buttonElement).toHaveTextContent('X');
    });

    test('calls onClick prop when clicked', () => {
        const onClick = jest.fn();
        render(<Square value="O" onClick={onClick} />);
        const button = screen.getByRole('button');
        fireEvent.click(button);
        expect(onClick).toHaveBeenCalled();
    });

    test('button should display correct value after props update', () => {
        const { rerender } = render(<Square value="X" onClick={() => {}} />);
        const buttonElement = screen.getByRole('button');
        expect(buttonElement).toHaveTextContent('X');
        rerender(<Square value="O" onClick={() => {}} />);
        expect(buttonElement).toHaveTextText('O');
    });

    test('does not throw an error if onClick is not provided', () => {
        render(<Square value="" />);
        const button = screen.getByRole('button');
        expect(() => fireEvent.click(button)).not.toThrow();
    });
});

