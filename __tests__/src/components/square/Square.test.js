// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Square from '../../../components/square/Square';

describe('Square component', () => {
  test('renders button correctly with given value', () => {
    // Arrange
    const value = 'X';
    const { getByRole } = render(<Square value={value} onClick={() => {}} />);
    
    // Act
    const button = getByRole('button');

    // Assert
    expect(button).toHaveTextContent(value);
  });

  test('calls onClick event on click of button', () => {
    // Arrange
    const onClick = jest.fn();
    const { getByRole } = render(<Square value="X" onClick={onClick} />);
    
    // Act
    fireEvent.click(getByRole('button'));
    
    // Assert
    expect(onClick).toHaveBeenCalled();
  });
  
  // Test case for default props if any can be added here.
  // ...
  
  test('renders button without crashing', () => {
    // Arrange and Act
    const { getByRole } = render(<Square value={null} onClick={() => {}} />);
    
    // Assert
    const button = getByRole('button');
    expect(button).toBeInTheDocument();
    expect(button).toBeEmptyDOMElement();
  });
});

