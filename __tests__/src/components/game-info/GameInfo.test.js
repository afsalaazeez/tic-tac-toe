// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic-cli using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
// Importing necessary libraries and components
import React from 'react';
import { render, screen } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect'; // update import to include the extend-expect
import GameInfo from '../../../../src/components/game-info/GameInfo';

// Test suite for GameInfo component
describe('GameInfo component', () => {
    test('renders correct text for player X\'s turn', () => {
        render(<GameInfo status="Playing" winner={null} xIsNext={true} />);
        expect(screen.getByText("It's your turn, player X")).toBeInTheDocument();
    });

    test('renders correct text for player O\'s turn', () => {
        render(<GameInfo status="Playing" winner={null} xIsNext={false} />);
        expect(screen.getByText("Now you, player O!")).toBeInTheDocument();
    });

    test('renders winning text for player X', () => {
        render(<GameInfo status="Winner: X" winner={'X'} xIsNext={false} />);
        expect(screen.getByText("Nice! I won!")).toBeInTheDocument();
    });

    test('renders winning text for player O', () => {
        render(<GameInfo status="Winner: O" winner={'O'} xIsNext={true} />);
        expect(screen.getByText("Wohoo! I made it!")).toBeInTheDocument();
    });

    test('renders the Friends image', () => {
        render(<GameInfo status="Playing" winner={null} xIsNext={true} />);
        expect(screen.getByAltText("Player X and Player O")).toBeInTheDocument();
    });

    test('matches snapshot when player X is next', () => {
        const { asFragment } = render(<GameInfo status="Playing" winner={null} xIsNext={true} />);
        expect(asFragment()).toMatchSnapshot();
    });
});

