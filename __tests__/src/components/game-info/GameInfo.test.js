// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic-cli using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
import React from 'react';
import { render } from '@testing-library/react';
import GameInfo from '../../../../src/components/game-info/GameInfo';

describe('Game:lvm Component', () => {
  test('renders "It\'s your turn, player X" if xIsNext is true and no winner', () => {
    const { queryByText } = render(<GameInfo xIsNext={true} winner={null} />);
    expect(queryByText("It's your turn, player X")).not.toBeNull();
  });

  test('renders "Now you, player O!" if xIsNext is false and no winner', () => {
    const { queryByText } = render(<GameInfo xIsNext={false} winner={null} />);
    expect(queryByText("Now you, player O!")).not.toBeNull();
  });

  test('renders "Nice! I won!" if status is "Winner: X" and winner exists', () => {
    const { queryByText } = render(<GameInfo status="Winner: X" winner={true} />);
    expect(queryByText("Nice! I won!")).not.toBeNull();
  });

  test('renders "Wohoo! I made it!" if winner exists but status is not "Winner: X"', () => {
    const { queryByText } = render(<GameInfo status="Winner: O" winner={true} />);
    expect(queryByText("Wohoo! I made it!")).not.toBeNull();
  });

  test('renders the friends image', () => {
    const { queryByAltText } = render(<GameInfo />);
    expect(queryByAltText("Player X and Player O")).not.toBeNull();
  });
});

