// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic-cli using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
// Importing necessary libraries and components
import React from 'react';
import { render, screen } from '@testing-library/react';
import GameInfo from '../../../../src/components/game-restart/GameInfo';

// Test suite for GameInfo component
describe('GameInfo Component', () => {
    // Case when it is player X's turn and there is no winner
    test('renders "It\'s your turn, player X" when xIsNext is true and there is no winner', () => {
        render(<GameInfo xIsNext={true} winner={null} />);
        expect(screen.getByText("It's your turn, player X")).toBeInTheDocument();
    });

    // Case when it is player O's turn and there is no winner
    test('renders "Now you, player O!" when xIsNext is false and there is no winner', () => {
        render(<GameInfo xIsNext={false} winner={null} />);
        expect(screen.getByText("Now you, player O!")).toBeInTheDocument();
    });

    // Case when player X wins
    test('renders "Nice! I won!" when winner is true and status indicates X as the winner', () => {
        render(<GameInfo winner={true} status="Winner: X" />);
        expect(screen.getByText("Nice! I won!")).toBeInTheDocument();
    });

    // Case when player O wins
    test('renders "Wohoo! I made it!" when winner is true and status indicates O as the winner', () => {
        render(<GameInfo winner={true} status="Winner: O" />);
        expect(screen.getByText("Wohoo! I made it!")).toBeInTheDocument();
    });
    
    // Verifying the image is displayed
    test('displays player image', () => {
        render(<GameInfo />);
        const image = screen.getByRole('img');
        expect(image).toHaveAttribute('src', expect.stringContaining('friends.webp'));
    });
});

