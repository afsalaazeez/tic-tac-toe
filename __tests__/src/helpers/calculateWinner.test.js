// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import calculateWinner from '../../../src/helpers/calculateWinner';

describe('calculateWinner', () => {
  test('should return null when there is no winner', () => {
    const squares = Array(9).fill(null);
    expect(calculateWinner(squares)).toBe(null);
  });

  test('should detect a winner in the first row', () => {
    const squares = ['X', 'X', 'X', null, null, null, null, null, null];
    expect(calculateWinner(squares)).toBe('X');
  });

  test('should detect a winner in a column', () => {
    const squares = ['O', null, null, 'O', null, null, 'O', null, null];
    expect(calculateWinner(squares)).toBe('O');
  });

  test('should detect a winner on a diagonal', () => {
    const squares = [null, null, 'X', null, 'X', null, 'X', null, null];
    expect(calculateWinner(squares)).toBe('X');
  });

  test('should return null when all squares are filled but there is no winner', () => {
    const squares = ['X', 'O', 'X', 'X', 'O', 'O', 'O', 'X', 'X'];
    expect(calculateWinner(squares)).toBe(null);
  });
});

