// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic-cli using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
import calculateWinner from '../../../src/helpers/calculateWinner';

describe('calculateWinner', () => {
    test('should return null when there is no winner', () => {
        const squares = [null, null, null, null, null, null, null, null, null];
        expect(calculateWinner(squares)).toBeNull();
    });

    test('should detect winner on the first row', () => {
        const squares = ['X', 'X', 'X', null, null, null, null, null, null];
        expect(calculateWinner(squares)).toBe('X');
    });

    test('should detect winner on a column', () => {
        const squares = [null, 'O', null, null, 'O', null, null, 'O', null];
        expect(calculateWinner(squares)).toBe('O');
    });

    test('should detect winner on the primary diagonal', () => {
        const squares = ['X', null, null, null, 'X', null, null, null, 'X'];
        expect(calculateWinner(squares)).toBe('X');
    });

    test('should return null for an incomplete line', () => {
        const squares = ['X', 'X', null, null, null, null, null, null, null];
        expect(calculateWinner(squares)).toBeNull();
    });

    test('should handle incorrect input types', () => {
        const squares = 'not an array';
        expect(() => calculateWinner(squares)).toThrow('Input must be an array of nine elements');
    });
});

