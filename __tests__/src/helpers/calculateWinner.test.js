// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic-cli using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
import calculateWinner from '../../../src/helpers/calculateWinner';

describe('calculateWinner', () => {
    test('should return null if no winner', () => {
        const squares = Array(9).fill(null);
        expect(calculateWinner(squares)).toBe(null);
    });

    test('should return the winner if a winning condition is met', () => {
        const squares = ['X', 'X', 'X', null, null, null, null, null, null];
        expect(calculateWinner(squares)).toBe('X');
    });

    test('should handle a full board without a winner', () => {
        const squares = ['X', 'O', 'X', 'X', 'X', 'O', 'O', 'X', 'O'];
        expect(calculateWinner(squares)).toBe(null);
    });

    test('should return the winner in a vertical win condition', () => {
        const squares = [null, 'O', null, null, 'O', null, 'X', 'O', 'X'];
        expect(calculateWinner(squares)).toBe('O');
    });

    test('should handle different winning lines correctly', () => {
        const squares = ['O', null, null, 'O', 'O', 'O', null, null, null];
        expect(calculateWinner(squares)).toBe('O');
    });
});

