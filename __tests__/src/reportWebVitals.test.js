// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic-cli using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
import reportWebVitals from '../../src/reportWebVitals';

// Mocking the 'web-vitals' module
jest.mock('web-vitals', () => ({
  getCLS: jest.fn(),
  getFID: jest.fn(),
  getFCP: jest.fn(),
  getLCP: jest.fn(),
  getTTFB: jest.fn()
}));

describe('reportWebVitals', () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  test('calls web vitals functions when onPerfEntry is a function', async () => {
    const mockPerfEntry = jest.fn();
    await reportWebVitals(mockPerfEntry);
    expect(require('web-vitals').getCLS).toHaveBeenCalledWith(mockPerfEntry);
    expect(require('web-vitals').getFID).toHaveBeenCalledWith(mockPerfEntry);
    expect(require('web-vitals').getFCP).toHaveBeenCalledWith(mockPerfEntry);
    expect(require('web-vitals').getLCP).toHaveBeenCalledWith(mockPerfEntry);
    expect(require('web-vitals').getTTFB).toHaveBeenCalledWith(mockPerfEntry);
  });

  test('does not call web vitals functions when onPerf.dismiss() is not a function', async () => {
    const mockPerfEntry = 'not a function';
    await reportWebVitals(mockPerfEntry);
    expect(require('web-vitals').getCLS).not.toHaveBeenCalled();
    expect(require('web-vitals').getFID).not.toHaveBeenCalled();
    expect(require('web-vitals').getFCP).not.toHaveBeenCalled();
    expect(require('web-vitals').getLCP).not.toHaveBeenCalled();
    expect(require('web-vitals').getTTFB).not.toHaveBeenCalled();
  });
});

