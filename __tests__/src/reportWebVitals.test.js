// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import reportWebVitals from '../../src/reportWebVitals.js';

jest.mock('web-vitals', () => ({
  getCLS: jest.fn(),
  getFID: jest.fn(),
  getFCP: jest.fn(),
  getLCP: jest.fn(),
  getTTFB: jest.fn(),
}));

describe('reportWebVitals', () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  test('calls onPerfEntry with each web vital when a function is provided', async () => {
    const onPerfEntry = jest.fn();
    reportWebVitals(onPerfEntry);
    
    await new Promise(process.nextTick); // wait for all promises to resolve
    
    expect(onPerfEntry).toHaveBeenCalledTimes(5); // Assuming there are 5 web vitals being tracked
  });

  test('does nothing when called without arguments', async () => {
    reportWebVitals();
    
    await new Promise(process.nextTick); // wait for all promises to resolve
    
    // None of the web vitals functions should have been called
    expect(require('web-vitals').getCLS).not.toHaveBeenCalled();
    expect(require('web-vitals').getFID).not.toHaveBeenCalled();
    expect(require('web-vitals').getFCP).not.toHaveBeenCalled();
    expect(require('web-vitals').getLCP).not.toHaveBeenCalled();
    expect(require('web-vitals').getTTFB).not.toHaveBeenCalled();
  });

  test('does nothing when called with a non-function argument', async () => {
    reportWebVitals('not-a-function');
    
    await new Promise(process.nextTick); // wait for all promises to resolve
    
    // None of the web vitals functions should have been called
    expect(require('web-vitals').getCLS).not.toHaveBeenCalled();
    expect(require('web-vitals').getFID).not.toHaveBeenCalled();
    expect(require('web-vitals').getFCP).not.toHaveBeenCalled();
    expect(require('web-vitals').getLCP).not.toHaveBeenCalled();
    expect(require('web-vitals').getTTFB).not.toHaveBeenCalled();
  });
});

