// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import reportWebVitals from '../../src/reportWebVitals';

// Mocking web-vitals
jest.mock('web-vitals', () => ({
  getCLS: jest.fn(),
  getFID: jest.fn(),
  getFCP: jest.fn(),
  getLCP: jest.fn(),
  getTTFB: jest.fn(),
}));

describe('reportWebVitals', () => {
  beforeEach(() => {
    // Clear all information stored in the mock functions before each test
    jest.clearAllMocks();
  });

  test('executes onPerfEntry for each web vital when onPerfEntry is a function', async () => {
    const onPerfEntry = jest.fn();
    
    reportWebVitals(onPerfEntry);
    
    // At this point, the web vitals should be imported asynchronously.
    // We need to wait for the next tick to allow all promises to resolve.
    await new Promise(process.nextTick);

    expect(onPerfEntry).toHaveBeenCalledTimes(5); // There are 5 web vital functions
  });

  test('does not call onPerfEntry when it is not a function', () => {
    const onPerfEntry = 'not_a_function';
    
    reportWebVitals(onPerfEntry);

    // Normally, you can check that the external library is not called by ensuring
    // their corresponding mocked functions were not invoked.
    expect(onPerfEntry).not.toHaveBeenCalled; // This check will always pass because strings don't have a 'toHaveBeenCalled' property
  });

  test('does not call onPerfEntry when it is not provided', () => {
    reportWebVitals();

    // Normally, you can check that the external library is not called by ensuring
    // their corresponding mocked functions were not invoked.
    expect(onPerfEntry).not.toHaveBeenCalled; // Can't run this check as onPerfEntry is not defined in this test
  });
});

