// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import reportWebVitals from '../../src/reportWebVitals';

// Jest mock for 'web-vitals' module
jest.mock('web-vitals', () => ({
  getCLS: jest.fn(),
  getFID: jest.fn(),
  getFCP: jest.fn(),
  getLCP: jest.fn(),
  getTTFB: jest.fn(),
}));

describe('reportWebVitals', () => {
  beforeEach(() => {
    // Reset the mocks before each test case
    jest.clearAllMocks();
  });

  test('does not call web vitals functions without onPerfEntry', () => {
    // Arrange
    const onPerfEntry = undefined;
    // Act
    reportWebVitals(onPerfEntry);
    // Assert
    expect(getCLS).not.toHaveBeenCalled();
    expect(getFID).not.toHaveBeenCalled();
    expect(getFCP).not.toHaveBeenCalled();
    expect(getLCP).not.toHaveBeenCalled();
    expect(getTTFB).not.toHaveBeenCalled();
  });

  test('calls web vitals functions with onPerfEntry as a function', async () => {
    // Arrange
    const onPerfEntry = jest.fn();
    // Act
    reportWebVitals(onPerfEntry);
    // This is an async operation, so we need to wait for it to complete
    await new Promise(process.nextTick);
    // Assert
    expect(getCLS).toHaveBeenCalledWith(onPerfEntry);
    expect(getFID).toHaveBeenCalledWith(onPerfEntry);
    expect(getFCP).toHaveBeenCalledWith(onPerfEntry);
    expect(getLCP).toHaveBeenCalledWith(onPerfEntry);
    expect(getTTFB).toHaveBeenCalledWith(onPerfEntry);
  });
});

