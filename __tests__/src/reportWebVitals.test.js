// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic-cli using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
import reportWebVitals from '../../src/reportWebVitals';

describe('Testing reportWebVitals', () => {
    // Mock console.log for capturing outputs
    const consoleSpy = jest.spyOn(console, 'log').mockImplementation();

    beforeEach(() => {
        // Reset mocks before each test case
        consoleSpy.mockClear();
    });

    test('should log measurements when onPerfEntry is triggered', () => {
        // Mock parameter that the reportWebVitals function expects
        const onPerfEntry = jest.fn().mockImplementation(callback => {
            const entries = [
                { name: 'CLS', value: 123, id: 'vitals-123' }
            ];
            entries.forEach(entry => callback(entry));
        });

        // Load Web Vitals with the mock implementation
        reportWebVitals(onPerfEntry);

        // Check if onPerfEntry was called and logged correctly
        expect(onPerfEntry).toHaveBeenCalled();
        expect(consoleSpy).toHaveBeenCalledWith(
            expect.any(String),
            expect.objectContaining({
                name: 'CLS',
                value: 123,
                id: 'vitals-123'
            })
        );
    });

    test('should handle the absence of onPerfEntry parameter correctly', () => {
        // Call reportWebVitals without a callback
        reportWebVitals();

        // As no callback is provided, nothing should be logged
        expect(consoleSpy).not.toHaveBeenCalled();
    });

    // Clean up after all tests are finished
    afterAll(() => {
        consoleSpy.mockRestore();
    });
});

