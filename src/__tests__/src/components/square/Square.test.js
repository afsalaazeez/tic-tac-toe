// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Square from '../../../components/square/Square';

describe('Square component', () => {
  test('renders a button', () => {
    const { getByRole } = render(<Square />);
    const buttonElement = getByRole('button');
    expect(buttonElement).toBeInTheDocument();
  });

  test('displays the value prop', () => {
    const value = 'X';
    const { getByText } = render(<Square value={value} />);
    expect(getByText(value)).toBeInTheDocument();
  });

  test('calls onClick prop when clicked', () => {
    const onClick = jest.fn();
    const { getByRole } = render(<Square onClick={onClick} />);
    const buttonElement = getByRole('button');
    fireEvent.click(buttonElement);
    expect(onClick).toHaveBeenCalled();
  });

  test('button has square class', () => {
    const { getByRole } = render(<Square />);
    const buttonElement = getByRole('button');
    expect(buttonElement).toHaveClass('square');
  });

  // Add more tests as necessary to cover additional functionality or edge cases
});


