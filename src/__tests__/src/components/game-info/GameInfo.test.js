// ********RoostGPT********
// Test generated by RoostGPT for test tic-tac-toe using AI Type Open AI and AI Model gpt-4-turbo-preview



// ********RoostGPT********
import React from 'react';
import { render } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import GameInfo from '../../../../components/game-info/GameInfo';

// Creating a test suite for GameInfo component
describe('GameInfo Component', () => {
  // Test when it's player X's turn and there's no winner
  test('displays player X turn message correctly', () => {
    const { getByText } = render(<GameInfo status="" winner={null} xIsNext={true} />);
    expect(getByText("It's your turn, player X")).toBeInTheDocument();
  });

  // Test when it's player O's turn and there's no winner
  test('displays player O turn message correctly', () => {
    const { getByText } = render(<GameInfo status="" winner={null} xIsNext={false} />);
    expect(getByText("Now you, player O!")).toBeInTheDocument();
  });

  // Test when player X wins
  test('displays player X win message correctly', () => {
    const { getByText } = render(<GameInfo status="Winner: X" winner="X" xIsNext={false} />);
    expect(getByText("Nice! I won!")).toBeInTheDocument();
  });

  // Test when player O wins
  test('displays player O win message correctly', () => {
    const { getByText } = render(<GameInfo status="Winner: O" winner="O" xIsNext={true} />);
    expect(getByText("Wohoo! I made it!")).toBeInTheDocument();
  });

  // Test rendering of the image for visual aid
  test('renders image correctly', () => {
    const { getByAltText } = render(<GameInfo status="" winner={null} xIsNext={true} />);
    expect(getByAltText("Player X and Player O")).toBeInTheDocument();
  });
});

