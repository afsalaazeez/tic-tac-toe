// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
// Import statements for React, testing utilities and the Board component
import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Board from '../../../components/board/Board';

// Test suite for the Board component
describe('Board Component', () => {
  // Initial props that can be reused across tests
  const initialProps = {
    squares: Array(9).fill(null),
    onClick: jest.fn(),
    jumpTo: jest.fn()
  };

  test('renders the board with 9 squares', () => {
    const { getAllByRole } = render(<Board {...initialProps} />);
    const buttons = getAllByRole('button');
    // There should be 9 square buttons plus one restart button
    expect(buttons.length).toBe(10);
  });

  test('calls onClick prop when a square is clicked', () => {
    const { getByText } = render(<Board {...initialProps} />);
    const squareButton = getByText('', { selector: 'button' }); // Assuming the Square button has no text initially
    fireEvent.click(squareButton);
    expect(initialProps.onClick).toHaveBeenCalled();
  });
  
  test('calls jumpTo prop when restart button is clicked', () => {
    const { getByText } = render(<Board {...initialProps} />);
    const restartButton = getByText('Restart the game');
    fireEvent.click(restartButton);
    expect(initialProps.jumpTo).toHaveBeenCalledWith(0);
  });
});

