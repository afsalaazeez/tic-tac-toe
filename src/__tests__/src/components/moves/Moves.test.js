// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
// src/__tests__/src/components/moves/Moves.test.js

import React from 'react';
import { render, cleanup, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Moves from '../../../components/moves/Moves';

describe('Moves Component', () => {
  afterEach(cleanup);

  it('renders without crashing', () => {
    const { getByTestId } = render(<Moves />);
    expect(getByTestId('moves-container')).toBeInTheDocument();
  });

  it('displays correct default moves count', () => {
    const { getByTestId } = render(<Moves />);
    expect(getByTestId('moves-count')).toHaveTextContent('0');
  });

  it('increases moves count on button click', () => {
    const { getByTestId } = render(<Moves />);
    fireEvent.click(getByTestId('increment-moves'));
    expect(getByTestId('moves-count')).toHaveTextContent('1');
  });

  it('decreases moves count correctly and does not go below zero', () => {
    const { getByTestId } = render(<Moves />);
    fireEvent.click(getByTestId('decrement-moves'));  // Assuming default count is 0
    expect(getByTestId('moves-count')).toHaveTextContent('0');
  });

  it('handles non-integer props gracefully', () => {
    const { getByTestId } = render(<Moves initialCount={'non-integer'} />);
    expect(getByTestId('moves-count')).toHaveTextContent('0');
  });

  it('does not render negative initial move counts', () => {
    const { getByTestId } = render(<Moves initialCount={-5} />);
    expect(getByTestId('moves-count')).toHaveTextContent('0');
  });
});


