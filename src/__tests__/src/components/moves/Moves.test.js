// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import Moves from '../../../components/moves/Moves';

describe('Moves Component Tests', () => {
  // Testing with empty history array
  test('Render with empty history', () => {
    const { queryByText } = render(<Moves history={[]} jumpTo={() => {}} />);
    expect(queryByText(/Go to move #/)).toBeNull();
    expect(queryByText('Go to game start')).toBeNull();
  });

  // Testing with one history item
  test('Render with one history item', () => {
    const { getByText } = render(<Moves history={[{}]} jumpTo={() => {}} />);
    expect(getByText('Go to game start')).toBeInTheDocument();
  });

  // Testing with multiple history items
  test('Render with multiple history items', () => {
    const history = [{}, {}, {}];
    const { getByText } = render(<Moves history={history} jumpTo={() => {}} />);
    expect(getByText('Go to move #2')).toBeInTheDocument();
  });

  // Testing the button click functionality
  test('Button click calls jumpTo with the right argument', () => {
    const mockJumpTo = jest.fn();
    const history = [{}, {}, {}];
    const { getAllByRole } = render(<Moves history={history} jumpTo={mockJumpTo} />);

    const button = getAllByRole('button')[1]; // Get the second button (move #1)
    fireEvent.click(button);
    expect(mockJumpTo).toHaveBeenCalledWith(1);
  });
});

