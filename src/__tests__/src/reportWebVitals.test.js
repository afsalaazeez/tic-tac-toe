// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
// Import statements for testing utilities and the component
import reportWebVitals from '../reportWebVitals.js';

describe('reportWebVitals function', () => {
  // Test whether the function exits early if no callback is provided
  test('does not invoke web vitals import when no function is provided', () => {
    const spy = jest.spyOn(global, 'import').mockResolvedValue({ getCLS: jest.fn(), getFID: jest.fn(), getFCP: jest.fn(), getLCP: jest.fn(), getTTFB: jest.fn() });
    reportWebVitals(undefined);
    expect(spy).not.toHaveBeenCalled();
    spy.mockRestore();
  });

  // Test whether the function correctly imports and applies the callback to the web vitals
  test('calls onPerfEntry with performance metrics when a function is provided', async () => {
    const mockWebVitals = {
      getCLS: jest.fn(),
      getFID: jest.fn(),
      getFCP: jest.fn(),
      getLCP: jest.fn(),
      getTTFB: jest.fn()
    };
    const spy = jest.spyOn(global, 'import').mockResolvedValue(mockWebVitals);
    const onPerfEntry = jest.fn();

    await reportWebVitals(onPerfEntry);

    expect(onPerfEntry).toHaveBeenCalledTimes(5); // 5 metrics methods
    expect(mockWebVitals.getCLS).toHaveBeenCalledWith(onPerfEntry);
    expect(mockWebVitals.getFID).toHaveBeenCalledWith(onPerfEntry);
    expect(mockWebVitals.getFCP).toHaveBeenCalledWith(onPerfEntry);
    expect(mockWebVitals.getLCP).toHaveBeenCalledWith(onPerfEntry);
    expect(mockWebVitals.getTTFB).toHaveBeenCalledWith(onPerfEntry);
    spy.mockRestore();
  });
});

