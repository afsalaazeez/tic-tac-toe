// ********RoostGPT********
// Test generated by RoostGPT for test react-tic using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import reportWebVitals from '../../reportWebVitals';

// Mocking the web-vitals module
jest.mock('web-vitals', () => ({
  getCLS: jest.fn(),
  getFID: jest.fn(),
  getFCP: jest.fn(),
  getLCP: jest.fn(),
  getTTFB: jest.fn(),
}));

describe('reportWebVitals', () => {
  beforeEach(() => {
    // Clear all mocks before each test
    jest.clearAllMocks();
  });

  test('does not call web vitals if onPerfEntry is not provided', () => {
    reportWebVitals();
    expect(require('web-vitals').getCLS).not.toBeCalled();
    expect(require('web-vitals').getFID).not.toBeCalled();
    expect(require('web-vitals').getFCP).not.toBeCalled();
    expect(require('web-vitals').getLCP).not.toBeCalled();
    expect(require('web-vitals').getTTFB).not.toBeCalled();
  });

  test('calls web vitals if onPerfEntry is a function', () => {
    const mockOnPerfEntry = jest.fn();
    reportWebVitals(mockOnPerfEntry);
    expect(require('web-vitals').getCLS).toBeCalledWith(mockOnPerfEntry);
    expect(require('web-vitals').getFID).toBeCalledWith(mockOnPerfEntry);
    expect(require('web-vitals').getFCP).toBeCalledWith(mockOnPerfEntry);
    expect(require('web-vitals').getLCP).toBeCalledWith(mockOnPerfEntry);
    expect(require('web-vitals').getTTFB).toBeCalledWith(mockOnPerfEntry);
  });

  test('does not call web vitals if onPerfEntry is not a function', () => {
    const mockOnPerfEntry = 'not a function';
    reportWebVitals(mockOnPerfEntry);
    expect(require('web-vitals').getCLS).not.toBeCalled();
    expect(require('web-vitals').getFID).not.toBeCalled();
    expect(require('web-vitals').getFCP).not.toBeCalled();
    expect(require('web-vitals').getLCP).not.toBeCalled();
    expect(require('web-vitals').getTTFB).not.toBeCalled();
  });
});

