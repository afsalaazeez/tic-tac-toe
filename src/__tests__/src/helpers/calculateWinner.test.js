// ********RoostGPT********
// Test generated by RoostGPT for test react-test-tic using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
/**
 * @jest-environment jsdom
 */

import calculateWinner from '../../helpers/calculateWinner';

describe('calculateWinner Function', () => {
  test('should return `null` when there is no winner', () => {
    const squares = [null, null, null, null, null, null, null, null, null];
    expect(calculateWinner(squares)).toBe(null);
  });

  test('should return the winner (e.g., "X") when player X wins horizontally', () => {
    const squares = ['X', 'X', 'X', null, null, null, null, null, null];
    expect(calculateWinner(squares)).toBe('X');
  });

  test('should return the winner (e.g., "O") when player O wins vertically', () => {
    const squares = ['O', null, null, 'O', null, null, 'O', null, null];
    expect(calculateWinner(squares)).toBe('O');
  });

  test('should return the winner when a diagonal win occurs', () => {
    const squares = ['X', null, null, null, 'X', null, null, null, 'X'];
    expect(calculateWinner(squares)).toBe('X');
  });

  test('should handle inputs with undefined or malformed arrays', () => {
    const squares = undefined;
    expect(calculateWinner(squares)).toBe(null);
  });

  test('should handle edge case with partial inputs filled', () => {
    const squares = ['X', 'X', null];
    expect(calculateWinner(squares)).toBe(null);
  });
});


